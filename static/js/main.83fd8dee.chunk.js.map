{"version":3,"sources":["Components/Alert.js","Components/Navbar.js","Components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","className","type","role","msg","Navbar","mode","href","title","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","heading","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","split","length","App","Mode","setMode","setAlert","document","body","style","backgroundColor","color","message","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.83fd8dee.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{props.alert.type}</strong> : {props.alert.msg}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\" >Home</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href='#'>About</a>\r\n            </li>\r\n          </ul>\r\n\r\n          <div className={`form-check form-switch text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n          </div>\r\n        </div>\r\n        </div>\r\n    </nav >\r\n  )\r\n} \r\n","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState('');\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Uppercase!\",\"success\");\r\n    }\r\n    const handleLowClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to LowerCase!\",\"success\");\r\n    }\r\n    const handleClear = () => {\r\n        setText(\"\");\r\n        props.showAlert(\"Text Cleared!\",\"danger\");\r\n    }\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n    \r\n    // const [myStyle, setmyStyle] = useState(null);\r\n    // if(props.mode==\"dark\"){\r\n    //     setmyStyle({backgroundColor: \"black\",color: \"white\"});\r\n    // }else{\r\n    //     setmyStyle({backgroundColor: \"white\",color: \"black\"});\r\n    // }\r\n    return (\r\n        <>\r\n            <div >\r\n                <div className=\"container my-3\">\r\n                    <div className=\"mb-3\">\r\n                        <h3>{props.heading}</h3>\r\n                        <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"exampleFormControlTextarea1\" rows=\"8\"></textarea>\r\n                    </div>\r\n                    <button type=\"button\" onClick={handleUpClick} className=\"btn btn-outline-info mx-1\">Convert To Uppercase</button>\r\n                    <button type=\"button\" onClick={handleLowClick} className=\"btn btn-outline-info mx-1\">Convert To Lowercase</button>\r\n                    <button type=\"button\" onClick={handleClear} className=\"btn btn-outline-info mx-1\">Clear Text</button>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <p>{text.split(\" \").length} Words, {text.length} Characters.</p>\r\n                    <p>{0.008 * text.split(\" \").length} Minutes Read</p>\r\n                    <h2>Preview</h2>\r\n                    <p>{text}</p>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n","import { useState } from 'react';\nimport './App.css';\nimport Alert from './Components/Alert';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n// import About from './Components/About';\n\nfunction App() {\n  //Color-Mode State\n  const [Mode, setMode] = useState(\"light\");\n  const toggleMode = () => {\n    if (Mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#080221\";\n      document.body.style.color = \"white\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"#f0fff9\";\n      document.body.style.color = \"black\";\n    }\n  }\n\n  //Alert -State\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n  return (\n    <>\n    <Navbar title=\"TextUtils\" toggleMode={toggleMode} mode={Mode} />\n    <Alert alert={alert} />\n    <TextForm showAlert={showAlert} heading=\"Enter Text To analyze\" mode={Mode} />\n      {/* <Router>\n        <Routes>\n          <Route exact path=\"/About\" element={<>\n            <Navbar title=\"TextUtils\" toggleMode={toggleMode} mode={Mode} />\n            <About />\n          </>} />\n          <Route exact path=\"/\" element={<>\n            <Navbar title=\"TextUtils\" toggleMode={toggleMode} mode={Mode} />\n            <Alert alert={alert} />\n            <TextForm showAlert={showAlert} heading=\"Enter Text To analyze\" mode={Mode} />\n          </>} />\n        </Routes>\n      </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}